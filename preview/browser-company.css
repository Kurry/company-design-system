/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root,
  :host {
    --color-black: #000000;
    --color-white: #fff;
    --color-red: #fb3a4d;
    --color-blue: #3139fb;
    --color-yellow: #fc0;
    --color-green: #34c759;
    --color-purple: #5d2de6;
    --color-black-90: rgb(0 0 0 / 90%);
    --color-black-80: rgb(0 0 0 / 80%);
    --color-black-64: rgb(0 0 0 / 64%);
    --color-black-50: rgb(0 0 0 / 50%);
    --color-black-30: rgb(0 0 0 / 30%);
    --color-black-15: rgb(0 0 0 / 15%);
    --color-black-10: rgb(0 0 0 / 10%);
    --color-black-5: rgb(0 0 0 / 5%);
    --color-white-true: #fff;
    --color-white-90: rgb(255 255 255 / 90%);
    --color-white-50: rgb(255 255 255 / 50%);
    --color-primary: #3139fb;
    --color-error: #fb3a4d;
    --color-brand-primary: #3139fb;
    --color-brand-primary-dark: #2404aa;
    --color-brand-primary-darker: #000354;
    --color-brand-secondary: #0047ff;
    --color-brand-danger: #fb3a4d;
    --color-brand-surface: #fffcec;
    --color-brand-blue: #3139fb;
    --color-brand-red: #fb3a4d;
    --color-brand-green: #34c759;
    --color-brand-cream: #fffcec;
    --color-focus: #96c4ff;
    --color-focus-ring: color-mix(in srgb, #3139fb 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --color-focus-ring: color-mix(in oklch, var(--color-brand-primary) 20%, transparent);
    }
    --color-success: #34c759;
    --color-warning: #fc0;
    --color-purple-100: color-mix(in oklch, #5d2de6 10%, white);
    --color-purple-500: #5d2de6;
    --color-purple-600: #4a24b8;
    --color-purple-800: color-mix(in oklch, #5d2de6 40%, black);
    --color-purple-900: color-mix(in oklch, #5d2de6 60%, black);
    --color-pink: #fd02f5;
    --color-brown: #340b05;
    --color-neon: #39ff14;
    --color-orange: #f59e0b;
    --color-cyan: #06b6d4;
    --color-indigo: #6366f1;
    --color-neutral-offwhite: rgb(245 244 226);
    --color-surface: #f8f8f8;
    --color-surface-elevated: #fff;
    --color-surface-overlay: rgb(255 255 255 / 90%);
    --color-surface-muted: rgb(0 0 0 / 5%);
    --color-text-primary: rgb(0 0 0 / 90%);
    --color-text-secondary: rgb(0 0 0 / 70%);
    --color-text-muted: rgb(0 0 0 / 50%);
    --color-text-subtle: rgb(0 0 0 / 40%);
    --color-text-disabled: rgb(0 0 0 / 30%);
    --color-text-success: #34c759;
    --color-text-warning: #fc0;
    --color-text-error: #fb3a4d;
    --color-text-info: #3139fb;
    --color-border-light: rgb(0 0 0 / 10%);
    --color-border-default: rgb(0 0 0 / 15%);
    --color-border-medium: rgb(0 0 0 / 30%);
    --color-border-strong: rgb(0 0 0 / 50%);
    --color-fill-primary: #3139fb;
    --color-fill-secondary: #5d2de6;
    --color-fill-tertiary: rgb(0 0 0 / 5%);
    --font-family-sans:
      marlin, -apple-system, blinkmacsystemfont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',
      'Droid Sans', 'Helvetica Neue', sans-serif;
    --font-family-body:
      'InterVariable', 'Inter', -apple-system, blinkmacsystemfont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',
      'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
    --font-family-mono:
      abc favorit mono, menlo, monaco, lucida console, liberation mono, dejavu sans mono, bitstream vera sans mono,
      courier new, monospace;
    --font-family-soft-sans:
      marlin soft sq, -apple-system, blinkmacsystemfont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',
      'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
    --font-size-32: 32px;
    --font-size-48: 48px;
    --layout-padding: 32px;
    --layout-page-padding-left: max(env(safe-area-inset-left), var(--layout-padding));
    --layout-page-padding-right: max(env(safe-area-inset-right), var(--layout-padding));
    --layout-max-width: 1280px;
    --layout-navbar-height: 64px;
    --gradient-conic-rainbow: conic-gradient(
      from 180deg at 50% 50%,
      rgb(140 172 255) 0deg,
      rgb(240 180 255) 108deg,
      rgb(255 255 255) 196.2deg,
      rgb(255 137 179) 313.2deg,
      rgb(140 172 255) 360deg
    );
  }
}
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html,
  :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family:
      ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    vertical-align: middle;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type='button'], [type='reset'], [type='submit']),
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .top-1\/2 {
    top: calc(1 / 2 * 100%);
  }
  .top-auto {
    top: auto;
  }
  .-right-full {
    right: -100%;
  }
  .left-1\/2 {
    left: calc(1 / 2 * 100%);
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-1 {
    z-index: 1;
  }
  .z-2 {
    z-index: 2;
  }
  .z-3 {
    z-index: 3;
  }
  .z-6 {
    z-index: 6;
  }
  .z-7 {
    z-index: 7;
  }
  .z-8 {
    z-index: 8;
  }
  .z-9 {
    z-index: 9;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-100 {
    z-index: 100;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-span-4 {
    grid-column: span 4 / span 4;
  }
  .col-span-12 {
    grid-column: span 12 / span 12;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .col-start-9 {
    grid-column-start: 9;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .row-start-3 {
    grid-row-start: 3;
  }
  .container {
    width: 100%;
  }
  .m-auto {
    margin: auto;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-auto {
    margin-top: auto;
  }
  .-mb-\[2vh\] {
    margin-bottom: calc(2vh * -1);
  }
  .mb-auto {
    margin-bottom: auto;
  }
  .ml-auto {
    margin-left: auto;
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
  .line-clamp-5 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 5;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-\[1\.675\/1\] {
    aspect-ratio: 1.675/1;
  }
  .aspect-\[3\/2\] {
    aspect-ratio: 3/2;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-max {
    height: max-content;
  }
  .h-min {
    height: min-content;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-fit {
    max-height: fit-content;
  }
  .max-h-full {
    max-height: 100%;
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .w-min {
    width: min-content;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-full {
    max-width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-bottom {
    transform-origin: bottom;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-50 {
    --tw-scale-x: 50%;
    --tw-scale-y: 50%;
    --tw-scale-z: 50%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-grabbing {
    cursor: grabbing;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-wait {
    cursor: wait;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .list-none {
    list-style-type: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .\!overflow-visible {
    overflow: visible !important;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-clip {
    overflow-x: clip;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-black-5 {
    border-color: var(--color-black-5);
  }
  .border-black-10 {
    border-color: var(--color-black-10);
  }
  .border-black\/5 {
    border-color: color-mix(in srgb, #000000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .border-black\/10 {
    border-color: color-mix(in srgb, #000000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .border-brand-blue {
    border-color: var(--color-brand-blue);
  }
  .border-brand-primary {
    border-color: var(--color-brand-primary);
  }
  .border-error {
    border-color: var(--color-error);
  }
  .border-success {
    border-color: var(--color-success);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white-50 {
    border-color: var(--color-white-50);
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .border-t-white {
    border-top-color: var(--color-white);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black-5 {
    background-color: var(--color-black-5);
  }
  .bg-black-10 {
    background-color: var(--color-black-10);
  }
  .bg-black-15 {
    background-color: var(--color-black-15);
  }
  .bg-black-30 {
    background-color: var(--color-black-30);
  }
  .bg-black-50 {
    background-color: var(--color-black-50);
  }
  .bg-black-64 {
    background-color: var(--color-black-64);
  }
  .bg-black-80 {
    background-color: var(--color-black-80);
  }
  .bg-black-90 {
    background-color: var(--color-black-90);
  }
  .bg-black\/10 {
    background-color: color-mix(in srgb, #000000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .bg-black\/20 {
    background-color: color-mix(in srgb, #000000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-blue {
    background-color: var(--color-blue);
  }
  .bg-brand-blue {
    background-color: var(--color-brand-blue);
  }
  .bg-brand-cream {
    background-color: var(--color-brand-cream);
  }
  .bg-brand-green {
    background-color: var(--color-brand-green);
  }
  .bg-brand-primary {
    background-color: var(--color-brand-primary);
  }
  .bg-brand-primary-dark {
    background-color: var(--color-brand-primary-dark);
  }
  .bg-brand-red {
    background-color: var(--color-brand-red);
  }
  .bg-brand-surface {
    background-color: var(--color-brand-surface);
  }
  .bg-brown {
    background-color: var(--color-brown);
  }
  .bg-current {
    background-color: currentcolor;
  }
  .bg-cyan {
    background-color: var(--color-cyan);
  }
  .bg-error {
    background-color: var(--color-error);
  }
  .bg-fill-primary {
    background-color: var(--color-fill-primary);
  }
  .bg-fill-secondary {
    background-color: var(--color-fill-secondary);
  }
  .bg-fill-tertiary {
    background-color: var(--color-fill-tertiary);
  }
  .bg-green {
    background-color: var(--color-green);
  }
  .bg-indigo {
    background-color: var(--color-indigo);
  }
  .bg-neon {
    background-color: var(--color-neon);
  }
  .bg-neutral-offwhite {
    background-color: var(--color-neutral-offwhite);
  }
  .bg-orange {
    background-color: var(--color-orange);
  }
  .bg-pink {
    background-color: var(--color-pink);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-purple {
    background-color: var(--color-purple);
  }
  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-red {
    background-color: var(--color-red);
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-surface {
    background-color: var(--color-surface);
  }
  .bg-surface-elevated {
    background-color: var(--color-surface-elevated);
  }
  .bg-surface-muted {
    background-color: var(--color-surface-muted);
  }
  .bg-surface-overlay {
    background-color: var(--color-surface-overlay);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white-50 {
    background-color: var(--color-white-50);
  }
  .bg-white-90 {
    background-color: var(--color-white-90);
  }
  .bg-white-true {
    background-color: var(--color-white-true);
  }
  .bg-yellow {
    background-color: var(--color-yellow);
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-l {
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-black {
    --tw-gradient-from: var(--color-black);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-purple-900 {
    --tw-gradient-from: var(--color-purple-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-white\/80 {
    --tw-gradient-from: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops:
      var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-white\/40 {
    --tw-gradient-via: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
    --tw-gradient-via-stops:
      var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-black {
    --tw-gradient-to: var(--color-black);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-white\/10 {
    --tw-gradient-to: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-fill {
    object-fit: fill;
  }
  .object-top {
    object-position: top;
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-normal {
    white-space: normal;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black-50 {
    color: var(--color-black-50);
  }
  .text-black\/20 {
    color: color-mix(in srgb, #000000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .text-black\/50 {
    color: color-mix(in srgb, #000000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .text-black\/60 {
    color: color-mix(in srgb, #000000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }
  .text-black\/64 {
    color: color-mix(in srgb, #000000 64%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 64%, transparent);
    }
  }
  .text-brand-blue {
    color: var(--color-brand-blue);
  }
  .text-brand-green {
    color: var(--color-brand-green);
  }
  .text-brand-primary {
    color: var(--color-brand-primary);
  }
  .text-brand-red {
    color: var(--color-brand-red);
  }
  .text-error {
    color: var(--color-error);
  }
  .text-green {
    color: var(--color-green);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-purple {
    color: var(--color-purple);
  }
  .text-purple-800 {
    color: var(--color-purple-800);
  }
  .text-red {
    color: var(--color-red);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-warning {
    color: var(--color-warning);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white-90 {
    color: var(--color-white-90);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .normal-case {
    text-transform: none;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-1 {
    text-decoration-thickness: 1px;
  }
  .underline-offset-2 {
    text-underline-offset: 2px;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-30 {
    opacity: 30%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .ring-4 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width))
      var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
      var(--tw-shadow);
  }
  .shadow-white {
    --tw-shadow-color: #fff;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-white) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-offset-2 {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .outline-offset-4 {
    outline-offset: 4px;
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,)
      var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,)
      var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property:
      color,
      background-color,
      border-color,
      outline-color,
      text-decoration-color,
      fill,
      stroke,
      --tw-gradient-from,
      --tw-gradient-via,
      --tw-gradient-to,
      opacity,
      box-shadow,
      transform,
      translate,
      scale,
      rotate,
      filter,
      -webkit-backdrop-filter,
      backdrop-filter,
      display,
      visibility,
      content-visibility,
      overlay,
      pointer-events;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .transition-colors {
    transition-property:
      color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from,
      --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .duration-0 {
    --tw-duration: 0ms;
    transition-duration: 0ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-350 {
    --tw-duration: 350ms;
    transition-duration: 350ms;
  }
  .duration-400 {
    --tw-duration: 400ms;
    transition-duration: 400ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-hover\:text-primary {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .group-hover\/author\:opacity-100 {
    &:is(:where(.group\/author):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:z-0 {
    &::before {
      content: var(--tw-content);
      z-index: 0;
    }
  }
  .before\:z-1 {
    &::before {
      content: var(--tw-content);
      z-index: 1;
    }
  }
  .before\:block {
    &::before {
      content: var(--tw-content);
      display: block;
    }
  }
  .before\:border {
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .before\:bg-transparent {
    &::before {
      content: var(--tw-content);
      background-color: transparent;
    }
  }
  .before\:bg-white\/20 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .before\:opacity-0 {
    &::before {
      content: var(--tw-content);
      opacity: 0%;
    }
  }
  .before\:transition-colors {
    &::before {
      content: var(--tw-content);
      transition-property:
        color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to;
      transition-timing-function: var(--tw-ease, ease);
      transition-duration: var(--tw-duration, 0s);
    }
  }
  .before\:transition-opacity {
    &::before {
      content: var(--tw-content);
      transition-property: opacity;
      transition-timing-function: var(--tw-ease, ease);
      transition-duration: var(--tw-duration, 0s);
    }
  }
  .before\:duration-200 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .before\:duration-300 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:z-10 {
    &::after {
      content: var(--tw-content);
      z-index: 10;
    }
  }
  .after\:block {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
  .after\:border-6 {
    &::after {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 6px;
    }
  }
  .after\:border-transparent {
    &::after {
      content: var(--tw-content);
      border-color: transparent;
    }
  }
  .after\:transition-colors {
    &::after {
      content: var(--tw-content);
      transition-property:
        color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to;
      transition-timing-function: var(--tw-ease, ease);
      transition-duration: var(--tw-duration, 0s);
    }
  }
  .after\:duration-200 {
    &::after {
      content: var(--tw-content);
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .hover\:bg-brand-blue {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-brand-blue);
      }
    }
  }
  .hover\:bg-brand-primary-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-brand-primary-dark);
      }
    }
  }
  .hover\:bg-brand-red {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-brand-red);
      }
    }
  }
  .hover\:bg-fill-tertiary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fill-tertiary);
      }
    }
  }
  .hover\:bg-green {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green);
      }
    }
  }
  .hover\:bg-purple-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-600);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:bg-white-90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white-90);
      }
    }
  }
  .hover\:bg-yellow {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow);
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .hover\:text-brand-primary-dark {
    &:hover {
      @media (hover: hover) {
        color: var(--color-brand-primary-dark);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:opacity-80 {
    &:hover {
      @media (hover: hover) {
        opacity: 80%;
      }
    }
  }
  .hover\:before\:bg-black\/5 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          background-color: color-mix(in srgb, #000000 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-black) 5%, transparent);
          }
        }
      }
    }
  }
  .hover\:before\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          opacity: 100%;
        }
      }
    }
  }
  .focus\:border-brand-primary {
    &:focus {
      border-color: var(--color-brand-primary);
    }
  }
  .focus\:border-error {
    &:focus {
      border-color: var(--color-error);
    }
  }
  .focus\:border-success {
    &:focus {
      border-color: var(--color-success);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
        var(--tw-shadow);
    }
  }
  .focus\:ring-error\/20 {
    &:focus {
      --tw-ring-color: color-mix(in srgb, #fb3a4d 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-error) 20%, transparent);
      }
    }
  }
  .focus\:ring-focus-ring {
    &:focus {
      --tw-ring-color: var(--color-focus-ring);
    }
  }
  .focus\:ring-success\/20 {
    &:focus {
      --tw-ring-color: color-mix(in srgb, #34c759 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-success) 20%, transparent);
      }
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
        var(--tw-shadow);
    }
  }
  .focus-visible\:ring-white {
    &:focus-visible {
      --tw-ring-color: var(--color-white);
    }
  }
  .focus-visible\:ring-offset-1 {
    &:focus-visible {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:ring-offset-black {
    &:focus-visible {
      --tw-ring-offset-color: var(--color-black);
    }
  }
  .focus-visible\:outline-dotted {
    &:focus-visible {
      --tw-outline-style: dotted;
      outline-style: dotted;
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:before\:opacity-0 {
    &:focus-visible {
      &::before {
        content: var(--tw-content);
        opacity: 0%;
      }
    }
  }
  .active\:bg-brand-primary-darker {
    &:active {
      background-color: var(--color-brand-primary-darker);
    }
  }
  .supports-hover\:hover\:bg-fill-secondary {
    @supports (hover: var(--tw)) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-fill-secondary);
        }
      }
    }
  }
  .supports-hover\:hover\:text-black {
    @supports (hover: var(--tw)) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-black);
        }
      }
    }
  }
  .supports-hover\:hover\:opacity-70 {
    @supports (hover: var(--tw)) {
      &:hover {
        @media (hover: hover) {
          opacity: 70%;
        }
      }
    }
  }
  .supports-pointer\:flex {
    @supports (pointer: var(--tw)) {
      display: flex;
    }
  }
  .supports-pointer\:hidden {
    @supports (pointer: var(--tw)) {
      display: none;
    }
  }
  .supports-pointer\:hover\:text-primary {
    @supports (pointer: var(--tw)) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary);
        }
      }
    }
  }
}
@layer design-tokens, base, components, utilities;
@property --color-brand-primary {
  syntax: '<color>';
  inherits: false;
  initial-value: #3139fb;
}
@property --motion-duration-normal {
  syntax: '<time>';
  inherits: false;
  initial-value: 200ms;
}
@layer design-tokens {
  :root {
    --safe-area-inset-top: env(safe-area-inset-top, 0px);
    --safe-area-inset-right: env(safe-area-inset-right, 0px);
    --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
    --safe-area-inset-left: env(safe-area-inset-left, 0px);
  }
}
@layer base {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  html {
    font-family: var(--font-family-body);
    font-size: 16px;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizelegibility;
    scroll-behavior: smooth;
  }
  body {
    background-color: var(--color-white);
    color: var(--color-gray-900);
    margin: 0;
    min-height: 100vh;
    min-height: 100dvh;
  }
  :focus-visible {
    outline: 2px solid var(--color-focus);
    outline-offset: 2px;
    border-radius: 2px;
  }
  :focus:not(:focus-visible) {
    outline: none;
  }
  img,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  textarea {
    font: inherit;
    color: inherit;
  }
}
@layer components {
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    font-weight: 500;
    font-size: 0.875rem;
    line-height: 1.25;
    letter-spacing: -0.025em;
    border-radius: 0.5rem;
    border: 0;
    cursor: pointer;
    transition: all 0.2s ease-out;
    &:focus {
      outline: none;
      box-shadow: 0 0 0 2px var(--color-focus-ring);
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
    backface-visibility: hidden;
    transform: translateZ(0);
    will-change: transform;
    &:hover {
      transform: translateY(-1px) scale(1.01);
    }
    &:active {
      transform: translateY(0) scale(0.99);
    }
  }
  .btn-sm {
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
  }
  .btn-lg {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
  }
  .btn-cta {
    background-color: var(--color-brand-primary);
    color: white;
    &:hover {
      background-color: var(--color-brand-primary-dark);
    }
    &:active {
      background-color: var(--color-brand-primary-darker);
    }
  }
  .btn-outline {
    border: 1px solid currentcolor;
    background-color: transparent;
    &:hover {
      background-color: currentcolor;
      color: white;
    }
  }
  .hero-section {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 60vh;
    padding: 2rem 1rem;
    background-color: var(--color-brand-surface);
  }
  .hero-content {
    text-align: center;
    max-width: 800px;
  }
  .hero-title {
    font-size: var(--font-size-48);
    font-weight: 300;
    margin-bottom: 1rem;
    color: var(--color-text-primary);
  }
  .hero-description {
    font-size: 1.25rem;
    color: var(--color-text-secondary);
    margin-bottom: 2rem;
    line-height: 1.6;
  }
  .hero-cta {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }
  .tag {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 500;
    border-radius: 9999px;
    background-color: var(--color-fill-tertiary);
    color: var(--color-text-primary);
  }
  .tag-sm {
    font-size: 0.75rem;
    padding: 0.125rem 0.5rem;
  }
  .tag-lg {
    font-size: 0.875rem;
    padding: 0.375rem 0.75rem;
  }
  .tag-outline {
    border: 1px solid currentcolor;
    background-color: transparent;
  }
  .tag-primary {
    background-color: var(--color-brand-primary);
    color: white;
  }
  .tag-secondary {
    background-color: var(--color-brand-secondary);
    color: white;
  }
  .tag-success {
    background-color: var(--color-success);
    color: white;
  }
  .tag-warning {
    background-color: var(--color-warning);
    color: var(--color-text-primary);
  }
  .tag-error {
    background-color: var(--color-error);
    color: white;
  }
  .tag-purple {
    background-color: var(--color-purple);
    color: white;
  }
  .tag-neutral {
    background-color: var(--color-surface-muted);
    color: var(--color-text-primary);
  }
  .avatar {
    display: inline-block;
    overflow: hidden;
    border-radius: 50%;
    width: 32px;
    height: 32px;
  }
  .avatar-sm {
    width: 24px;
    height: 24px;
  }
  .avatar-md {
    width: 32px;
    height: 32px;
  }
  .avatar-lg {
    width: 48px;
    height: 48px;
  }
  .avatar-xl {
    width: 64px;
    height: 64px;
  }
  .feature-card {
    display: flex;
    flex-direction: column;
    background-color: white;
    border-radius: 32px;
    padding: 16px;
    position: relative;
    z-index: 1;
    box-shadow: 0 8px 30px rgb(0 0 0 / 12%);
    transition: all 200ms cubic-bezier(0, 0, 0.2, 1);
    text-decoration: none;
    color: inherit;
  }
  .feature-card::before {
    content: '';
    position: absolute;
    inset: -1px;
    border-radius: 32px;
    border: 1px solid #e5e5e5;
    transition: border-color 200ms cubic-bezier(0, 0, 0.2, 1);
    z-index: -1;
  }
  .feature-card:hover {
    box-shadow: 0 30px 60px rgb(0 0 0 / 12%);
    transform: translateY(-2px);
  }
  .feature-card:hover::before {
    border-color: #737373;
  }
  .feature-card:focus-visible {
    outline: 2px solid var(--color-focus);
    outline-offset: 2px;
  }
  .feature-card-image {
    width: 100%;
    aspect-ratio: 16/9;
    border-radius: 8px;
    overflow: hidden;
    margin-bottom: 1rem;
  }
  .feature-card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--color-text-primary);
  }
  .feature-card-description {
    color: var(--color-text-secondary);
    margin-bottom: 1rem;
    flex-grow: 1;
  }
  .feature-card-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: auto;
  }
  .feature-card-author {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  .feature-card-username {
    font-size: 0.875rem;
    color: var(--color-text-muted);
  }
  .feature-card-action {
    font-size: 0.875rem;
    color: var(--color-brand-primary);
    text-decoration: none;
  }
  .content-card {
    border-radius: 16px;
    padding: 16px;
    background-color: white;
    border: 1px solid rgb(0 0 0 / 5%);
    box-shadow: 0 8px 30px rgb(0 0 0 / 12%);
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
  .metadata-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .metadata-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 0;
    border-bottom: 1px solid var(--color-border-light);
  }
  .metadata-label {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    font-weight: 500;
  }
  .metadata-value {
    font-family: var(--font-family-mono);
    font-size: 0.875rem;
    color: var(--color-text-primary);
  }
  .metadata-copy-btn {
    margin-left: 0.5rem;
    padding: 0.25rem;
    border-radius: 0.25rem;
    color: var(--color-text-muted);
  }
  .metadata-copy-btn:hover {
    background-color: rgb(0 0 0 / 5%);
  }
  .media-item {
    position: relative;
    border-radius: 8px;
    overflow: hidden;
  }
  .media-item-overlay {
    position: absolute;
    inset: 0;
    background: rgb(0 0 0 / 30%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 500;
  }
  .back-nav {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-text-muted);
    text-decoration: none;
    font-size: 0.875rem;
    margin-bottom: 1rem;
  }
  .back-nav:hover {
    color: var(--color-text-primary);
  }
  .back-nav-icon {
    width: 16px;
    height: 16px;
  }
  .h1 {
    font-size: 4.8rem;
    font-weight: 300;
    line-height: 5.2rem;
    letter-spacing: -0.04em;
  }
  .h2 {
    font-size: 3.6rem;
    font-weight: 300;
    line-height: 4.1rem;
    letter-spacing: -0.04em;
  }
  .h3 {
    font-size: 2.4rem;
    font-weight: 300;
    line-height: 3rem;
    letter-spacing: -0.02em;
  }
  .h4 {
    font-size: 2rem;
    font-weight: 300;
    line-height: 2.5rem;
    letter-spacing: -0.02em;
  }
  .p1 {
    font-size: 1.8rem;
    font-weight: 400;
    line-height: 2.2rem;
    letter-spacing: -0.02em;
  }
  .p1-body {
    font-size: 1.8rem;
    font-weight: 400;
    line-height: 2.2rem;
  }
  .p2 {
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 2rem;
  }
  .p2-body {
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 2rem;
  }
  .testimonial {
    font-size: 2rem;
    font-weight: 400;
    line-height: 2.4rem;
    letter-spacing: -0.02em;
  }
  .caption {
    font-size: 1.3rem;
    text-transform: uppercase;
    line-height: 1.7rem;
    letter-spacing: 0.1em;
  }
  .mono-body {
    font-family: var(--font-family-mono);
    font-size: 0.875rem;
  }
  .detail-header {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 20px;
    width: 100%;
    max-width: var(--layout-max-width);
    margin: 0 auto;
    padding: 0 20px;
  }
  .detail-header-title {
    grid-column: span 12;
    grid-row: 2;
    margin-bottom: 20px;
    font-size: var(--font-size-32);
    font-weight: 700;
    line-height: 1.2;
  }
  @media (width >= 800px) {
    .detail-header-title {
      grid-column: span 8;
    }
  }
  .container {
    width: 100%;
    max-width: var(--layout-max-width);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--layout-page-padding-left);
    padding-right: var(--layout-page-padding-right);
  }
  .gradient-rainbow {
    background: var(--gradient-conic-rainbow);
  }
  .safe-area {
    padding-left: var(--layout-page-padding-left);
    padding-right: var(--layout-page-padding-right);
  }
}
@layer utilities {
  .text-brand-primary {
    color: var(--color-brand-primary);
  }
  .bg-brand-primary {
    background-color: var(--color-brand-primary);
  }
  .border-brand-primary {
    border-color: var(--color-brand-primary);
  }
  .text-brand-blue {
    color: var(--color-brand-blue);
  }
  .bg-brand-blue {
    background-color: var(--color-brand-blue);
  }
  .text-brand-red {
    color: var(--color-brand-red);
  }
  .bg-brand-red {
    background-color: var(--color-brand-red);
  }
  .text-brand-green {
    color: var(--color-brand-green);
  }
  .bg-brand-green {
    background-color: var(--color-brand-green);
  }
  .bg-brand-cream {
    background-color: var(--color-brand-cream);
  }
  .bg-black-80 {
    background-color: var(--color-black-80);
  }
  .bg-black-64 {
    background-color: var(--color-black-64);
  }
  .bg-black-30 {
    background-color: var(--color-black-30);
  }
  .bg-black-15 {
    background-color: var(--color-black-15);
  }
  .bg-black-5 {
    background-color: var(--color-black-5);
  }
  .bg-white-true {
    background-color: var(--color-white-true);
  }
  .bg-white-90 {
    background-color: var(--color-white-90);
  }
  .bg-white-50 {
    background-color: var(--color-white-50);
  }
  .bg-pink {
    background-color: var(--color-pink);
  }
  .bg-brown {
    background-color: var(--color-brown);
  }
  .bg-neon {
    background-color: var(--color-neon);
  }
  .bg-orange {
    background-color: var(--color-orange);
  }
  .bg-cyan {
    background-color: var(--color-cyan);
  }
  .bg-indigo {
    background-color: var(--color-indigo);
  }
  .bg-surface {
    background-color: var(--color-surface);
  }
  .bg-surface-elevated {
    background-color: var(--color-surface-elevated);
  }
  .bg-surface-overlay {
    background-color: var(--color-surface-overlay);
  }
  .bg-surface-muted {
    background-color: var(--color-surface-muted);
  }
  .bg-fill-primary {
    background-color: var(--color-fill-primary);
  }
  .bg-fill-secondary {
    background-color: var(--color-fill-secondary);
  }
  .bg-fill-tertiary {
    background-color: var(--color-fill-tertiary);
  }
  .text-primary {
    color: var(--color-text-primary);
  }
  .text-secondary {
    color: var(--color-text-secondary);
  }
  .text-muted {
    color: var(--color-text-muted);
  }
  .text-subtle {
    color: var(--color-text-subtle);
  }
  .text-disabled {
    color: var(--color-text-disabled);
  }
  .text-success {
    color: var(--color-text-success);
  }
  .text-warning {
    color: var(--color-text-warning);
  }
  .text-error {
    color: var(--color-text-error);
  }
  .text-info {
    color: var(--color-text-info);
  }
  .border-light {
    border-color: var(--color-border-light);
  }
  .border-default {
    border-color: var(--color-border-default);
  }
  .border-medium {
    border-color: var(--color-border-medium);
  }
  .border-strong {
    border-color: var(--color-border-strong);
  }
  .border-black-10 {
    border-color: var(--color-black-10);
  }
  .font-display {
    font-family: var(--font-family-sans);
  }
  .font-body {
    font-family: var(--font-family-body);
  }
  .font-mono {
    font-family: var(--font-family-mono);
  }
  .font-soft {
    font-family: var(--font-family-soft-sans);
  }
  .max-w-layout {
    max-width: var(--layout-max-width);
  }
  .h-navbar {
    height: var(--layout-navbar-height);
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --color-surface: var(--color-gray-900);
    --color-surface-elevated: var(--color-gray-800);
  }
}
@keyframes pulse-slow {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce-in {
  0% {
    transform: scale3d(0.3, 0.3, 1);
    opacity: 0;
  }
  50% {
    transform: scale3d(1.05, 1.05, 1);
    opacity: 0.8;
  }
  70% {
    transform: scale3d(0.95, 0.95, 1);
    opacity: 1;
  }
  100% {
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
}
@property --tw-translate-x {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: '*';
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: '*';
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: '*';
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: '*';
  inherits: false;
}
@property --tw-rotate-y {
  syntax: '*';
  inherits: false;
}
@property --tw-rotate-z {
  syntax: '*';
  inherits: false;
}
@property --tw-skew-x {
  syntax: '*';
  inherits: false;
}
@property --tw-skew-y {
  syntax: '*';
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: '*';
  inherits: false;
}
@property --tw-gradient-from {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: '*';
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: '*';
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: '*';
  inherits: false;
}
@property --tw-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: '*';
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: '*';
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: '*';
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: '<length>';
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: '*';
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-duration {
  syntax: '*';
  inherits: false;
}
@property --tw-content {
  syntax: '*';
  initial-value: '';
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    ::before,
    ::after,
    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-content: '';
      --color-brand-primary: #3139fb;
      --motion-duration-normal: 200ms;
    }
  }
}
